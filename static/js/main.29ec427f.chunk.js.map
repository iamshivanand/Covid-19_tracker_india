{"version":3,"sources":["Graphs.js","Table.js","Map.js","App.js","index.js"],"names":["defaults","global","legend","position","labels","boxWidth","fontSize","Graphs","props","totalCasesToday","confirmedCases","sevenDaysConfirmedCases","sevenDaysDeceasedCases","sevenDaysRecoveredCases","className","data","datasets","backgroundColor","height","width","options","maintainAspectRatio","cutoutPercentage","tooltips","enabled","label","borderWidth","borderColor","Table","i","map","each","data-info","JSON","stringify","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","state","confirmed","active","recovered","deaths","Projection_Config","scale","center","COLOR_RANGE","geographyStyle","default","outline","hover","fill","transition","pressed","Map","totalCases","statewise","statecode","id","value","useState","tooltipContent","setTooltipContent","cases","setCases","geo","current","properties","name","colorScale","scaleQuantile","domain","d","range","projectionConfig","projection","data-tip","geography","India_Topo_Json","geographies","find","s","style","rsmKey","App","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","setTotalCases","setStateWise","statesDaily","setStatesDaily","CasesToday","setCasesTOday","setConfirmedCases","setSevenDaysConfirmedCases","setSevenDaysDeceasedCases","setSevenDaysRecoveredCases","totalConfirmedCases","useEffect","fetch","then","res","json","states_daily","todayCases","todayIndex","findIndex","x","dateymd","event","currentTarget","dataset","info","newCase","totalCasesData","parse","stateCode","toLowerCase","console","log","sevenDaysConfirmedData","sevenDaysDeceasedData","sevenDaysRecoveredData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29ec427f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Doughnut, defaults, Line } from \"react-chartjs-2\";\r\n\r\ndefaults.global.legend.position = \"bottom\";\r\n// defaults.global.tooltips.enabled=false;\r\ndefaults.global.legend.labels.boxWidth = 5;\r\ndefaults.global.legend.labels.fontSize = 10;\r\n\r\nfunction Graphs(props) {\r\n  var totalCasesToday = props.totalCasesToday;\r\n  var confirmedCases = props.confirmedCases;\r\n  var sevenDaysConfirmedCases = props.sevenDaysConfirmedCases;\r\n  var sevenDaysDeceasedCases = props.sevenDaysDeceasedCases;\r\n  var sevenDaysRecoveredCases = props.sevenDaysRecoveredCases;\r\n\r\n  return (\r\n    <div className=\"total-graph-container\">\r\n      <div className=\"doughnut-chart\">\r\n        <div className=\"confirmed-graph\">\r\n          <div className=\"total\">Total</div>\r\n          <div className=\"total-value\">{confirmedCases}</div>\r\n        </div>\r\n        <Doughnut\r\n          className=\"doughnut\"\r\n          data={{\r\n            labels: [\r\n              \"active:\" + totalCasesToday[0],\r\n              \"deceased:\" + totalCasesToday[1],\r\n              \"recovered:\" + totalCasesToday[2],\r\n            ],\r\n            datasets: [\r\n              {\r\n                data: totalCasesToday,\r\n                backgroundColor: [\"blue\", \"grey\", \"green\"],\r\n              },\r\n            ],\r\n          }}\r\n          height={100}\r\n          width={100}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            cutoutPercentage: 80,\r\n            tooltips: {\r\n              enabled: false,\r\n            },\r\n          }}\r\n        ></Doughnut>\r\n      </div>\r\n      <div className=\"line-chart\">\r\n        <Line\r\n          data={{\r\n            labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"],\r\n            datasets: [\r\n              {\r\n                label: \"confirmed\",\r\n                data: sevenDaysConfirmedCases,\r\n                backgroundColor: \"rgba(0, 0, 255, 0)\",\r\n                borderWidth: 2,\r\n                borderColor: \"rgba(255, 0, 0, 1)\",\r\n              },\r\n              {\r\n                label: \"deceased\",\r\n                data: sevenDaysDeceasedCases,\r\n                backgroundColor: \"rgba(255,255,255,0)\",\r\n                borderWidth: 2,\r\n                borderColor: \"rgba(128, 128, 128, 1)\",\r\n              },\r\n              {\r\n                label: \"recovered\",\r\n                data: sevenDaysRecoveredCases,\r\n                backgroundColor: \"rgba(0,255,0,0)\",\r\n                borderWidth: 2,\r\n                borderColor: \"rgba(0,255,0,1)\",\r\n              },\r\n            ],\r\n          }}\r\n          height={100}\r\n          width={100}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Graphs;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nfunction Table(props) {\r\n  //   console.log(props.data);\r\n  var data = props.data;\r\n\r\n  //   console.log(props.handleMouseHover);\r\n  //   props.data.length && hello();\r\n  //   function hello() {\r\n  //     data = props.data;\r\n  //   }\r\n  //   console.log(data);\r\n\r\n  //   const onMouseEnter = (event) => {\r\n  //     // console.log(event.currentTarget.dataset.info);\r\n  //     var value=event.currentTarget.dataset.info;\r\n  //     value=JSON.parse(value);\r\n  //     console.log(value);\r\n  //     // console.log(JSON.parse(event.target.dataset.info));\r\n  //   };\r\n  var i = 0;\r\n  return (\r\n    <div className=\"state-wise-table\">\r\n      <div className=\"table\">\r\n        <div className=\"rows heading\">\r\n          <div className=\"state heading\">STATE</div>\r\n          <div className=\"confirmed heading\">CONFIRMED</div>\r\n          <div className=\"active heading\">ACTIVE</div>\r\n          <div className=\"recovered heading\">RECOVERED</div>\r\n          <div className=\"deceased heading\">DECEASED</div>\r\n        </div>\r\n\r\n        {data.map((each) => (\r\n          <div\r\n            className=\"rows\"\r\n            key={i++}\r\n            data-info={JSON.stringify(each)}\r\n            onMouseEnter={props.handleMouseEnter}\r\n            onMouseLeave={props.handleMouseLeave}\r\n          >\r\n            <div className=\"state\">{each.state}</div>\r\n            <div className=\"confirmed\">{each.confirmed}</div>\r\n            <div className=\"active\">{each.active}</div>\r\n            <div className=\"recovered\">{each.recovered}</div>\r\n            <div className=\"deceased\">{each.deaths}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\nimport { scaleQuantile } from \"d3-scale\";\r\nimport India_Topo_Json from \"./IndiaTopo.json\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nconst Projection_Config = {\r\n  scale: 600,\r\n  center: [78.9629, 22.5937],\r\n};\r\nconst COLOR_RANGE = [\r\n  \"#ffedea\",\r\n  \"#ffcec5\",\r\n  \"#ffad9f\",\r\n  \"#ff8a75\",\r\n  \"#ff5533\",\r\n  \"#e2492d\",\r\n  \"#be3d26\",\r\n  \"#9a311f\",\r\n  \"#782618\",\r\n];\r\n\r\nconst geographyStyle = {\r\n  default: {\r\n    outline: \"none\",\r\n  },\r\n  hover: {\r\n    fill: \"red\",\r\n    transition: \"all 250ms\",\r\n    outline: \"none\",\r\n  },\r\n  pressed: {\r\n    outline: \"none\",\r\n  },\r\n};\r\n\r\nfunction Map(props) {\r\n  var totalCases = props.totalCases;\r\n  var statewise = props.statewise;\r\n\r\n  var statewise = props.statewise;\r\n  var data = [];\r\n  //function for the data\r\n  statewise.map((each) => {\r\n    if (each.statecode != \"TT\" && each.statecode != \"UN\") {\r\n      data = [\r\n        ...data,\r\n        {\r\n          id: each.statecode,\r\n          state: each.state,\r\n          value: each.active,\r\n        },\r\n      ];\r\n    }\r\n  });\r\n  //   console.log(data);\r\n\r\n  const [tooltipContent, setTooltipContent] = useState(\"\");\r\n  const [cases, setCases] = useState(totalCases);\r\n\r\n  const onMouseEnter = (geo, current = { value: \"NA\" }) => {\r\n    return () => {\r\n      setTooltipContent(`${geo.properties.name}:${current.value}`);\r\n      \r\n      statewise.map((each) => {\r\n        if (each.statecode === current.id) {\r\n          //   console.log(each);\r\n          setCases(each);\r\n        }\r\n      });\r\n    };\r\n  };\r\n  const onMouseLeave = () => {\r\n    setTooltipContent(\"\");\r\n    setCases(totalCases);\r\n  };\r\n\r\n  const colorScale= scaleQuantile().domain(data.map(d=>d.value)).range(COLOR_RANGE);\r\n  \r\n  var arrayData = [\r\n    {\r\n      value: \"0\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"indian-map\">\r\n      <div className=\"boxes-div\">\r\n        <div className=\"confirmed-box\">\r\n          <div className=\"box-heading\">CONFIRMED</div>\r\n          <div className=\"box-value\">{cases.confirmed}</div>\r\n        </div>\r\n        <div className=\"active-box\">\r\n          <div className=\"box-heading\">ACTIVE</div>\r\n          <div className=\"box-value\">{cases.active}</div>\r\n        </div>\r\n        <div className=\"recovered-box\">\r\n          <div className=\"box-heading\">RECOVERED</div>\r\n          <div className=\"box-value\">{cases.recovered}</div>\r\n        </div>\r\n        <div className=\"deceased-box\">\r\n          <div className=\"box-heading\">DECEASED</div>\r\n          <div className=\"box-value\">{cases.deaths}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"map\">\r\n        <ReactTooltip>{tooltipContent}</ReactTooltip>\r\n        <ComposableMap\r\n          projectionConfig={Projection_Config}\r\n          projection=\"geoMercator\"\r\n          width={400}\r\n          height={350}\r\n          data-tip=\"\"\r\n        >\r\n          <Geographies geography={India_Topo_Json}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                var current = data.find((s) => s.id === geo.id);\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={current ? colorScale(current.value) : \"lightgrey\"}\r\n                    style={geographyStyle}\r\n                    onMouseEnter={onMouseEnter(geo, current)}\r\n                    onMouseLeave={onMouseLeave}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Graphs from \"./Graphs\";\nimport Table from \"./Table\";\nimport Map from \"./Map\";\n\nfunction App() {\n  var today = new Date();\n  var dd = String(today.getDate() - 1).padStart(2, \"0\");\n  var mm = String(today.getMonth() + 1).padStart(2, \"0\");\n  var yyyy = today.getFullYear();\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n  // console.log(today);\n\n  const api1 = \"https://api.covid19india.org/states_daily.json\";\n  const api2 = \"https://api.covid19india.org/data.json\";\n\n  const [totalCases, setTotalCases] = useState([]);\n  const [statewise, setStateWise] = useState([]);\n  const [statesDaily, setStatesDaily] = useState([]);\n  const [CasesToday, setCasesTOday] = useState([]);\n  const [confirmedCases, setConfirmedCases] = useState([]);\n  var [sevenDaysConfirmedCases, setSevenDaysConfirmedCases] = useState([]);\n  var [sevenDaysDeceasedCases, setSevenDaysDeceasedCases] = useState([]);\n  var [sevenDaysRecoveredCases, setSevenDaysRecoveredCases] = useState([]);\n\n  useEffect(() => {\n    fetch(api1)\n      .then((res) => res.json())\n      .then((json) => {\n        setStatesDaily(json.states_daily);\n      });\n\n    fetch(api2)\n      .then((res) => res.json())\n      .then((json) => {\n        var statewise = json.statewise;\n        setTotalCases(statewise[0]);\n        setStateWise(statewise);\n        var todayCases = [\n          totalCases.active,\n          totalCases.deaths,\n          totalCases.recovered,\n        ];\n        setCasesTOday(todayCases);\n      });\n  }, []);\n\n  function totalCasesData(cases) {\n    var casesToday = [cases.active, cases.deaths, cases.recovered];\n    return casesToday;\n  }\n  function totalConfirmedCases(cases) {\n    setConfirmedCases(cases.confirmed);\n  }\n\n  //finding the data for the last seven days for total india\n  var todayIndex = statesDaily.findIndex((x) => x.dateymd === today);\n\n  function sevenDaysConfirmedData(stateCode) {\n    console.log(stateCode);\n    var data = [\n      statesDaily[todayIndex - 18][stateCode],\n      statesDaily[todayIndex - 15][stateCode],\n      statesDaily[todayIndex - 12][stateCode],\n      statesDaily[todayIndex - 9][stateCode],\n      statesDaily[todayIndex - 6][stateCode],\n      statesDaily[todayIndex - 3][stateCode],\n      statesDaily[todayIndex][stateCode],\n    ];\n    setSevenDaysConfirmedCases(data);\n  }\n\n  // var stateCode = \"tt\";\n  // var sevenDaysConfirmedCases = sevenDaysConfirmedData(stateCode);\n\n  // console.log(sevenDaysConfirmedCases);\n\n  function sevenDaysDeceasedData(stateCode) {\n    var data = [\n      statesDaily[todayIndex - 19][stateCode],\n      statesDaily[todayIndex - 16][stateCode],\n      statesDaily[todayIndex - 13][stateCode],\n      statesDaily[todayIndex - 10][stateCode],\n      statesDaily[todayIndex - 7][stateCode],\n      statesDaily[todayIndex - 4][stateCode],\n      statesDaily[todayIndex - 1][stateCode],\n    ];\n    setSevenDaysDeceasedCases(data);\n  }\n  // var sevenDaysDeceasedCases = sevenDaysDeceasedData(stateCode);\n  function sevenDaysRecoveredData(stateCode) {\n    var data = [\n      statesDaily[todayIndex - 20][stateCode],\n      statesDaily[todayIndex - 17][stateCode],\n      statesDaily[todayIndex - 14][stateCode],\n      statesDaily[todayIndex - 11][stateCode],\n      statesDaily[todayIndex - 8][stateCode],\n      statesDaily[todayIndex - 5][stateCode],\n      statesDaily[todayIndex - 2][stateCode],\n    ];\n    setSevenDaysRecoveredCases(data);\n  }\n  // var sevenDaysRecoveredCases = sevenDaysRecoveredData(stateCode);\n\n  function handleMouseEnter(event) {\n    var cases = event.currentTarget.dataset.info;\n    cases = JSON.parse(cases);\n    var newCase = totalCasesData(cases);\n    setCasesTOday(newCase);\n    totalConfirmedCases(cases);\n    var stateCode = cases.statecode.toLowerCase();\n    sevenDaysConfirmedData(stateCode);\n    sevenDaysDeceasedData(stateCode);\n    sevenDaysRecoveredData(stateCode);\n  }\n  function handleMouseLeave(event) {\n    setCasesTOday([totalCases.active, totalCases.deaths, totalCases.recovered]);\n    totalConfirmedCases(totalCases);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"left-container\">\n        <div className=\"upper-left-container\">\n          <h4>INDIA COVID-19 Tracker</h4>\n          <p>\n            Let's pray to make our Earth Covid-19 free soon,Stay Safe and do The\n            Locate.\n          </p>\n        </div>\n        <Graphs\n          totalCasesToday={CasesToday}\n          confirmedCases={confirmedCases}\n          sevenDaysConfirmedCases={sevenDaysConfirmedCases}\n          sevenDaysDeceasedCases={sevenDaysDeceasedCases}\n          sevenDaysRecoveredCases={sevenDaysRecoveredCases}\n        />\n        <Table\n          data={statewise}\n          handleMouseEnter={handleMouseEnter}\n          handleMouseLeave={handleMouseLeave}\n        />\n      </div>\n      <div className=\"right-container\">\n        <div className=\"upper-right-container\">\n          <h4>INDIA MAP</h4>\n          <p>HOVER OVER STATES FOR MORE DETAILS </p>\n        </div>\n        <Map totalCases={totalCases} statewise={statewise} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}